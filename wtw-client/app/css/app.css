/* app css stylesheet */
body {
	font-family: 'Open Sans', sans-serif;
	font-size: 150%;
}
.menu {
  list-style: none;
  border-bottom: 0.1em solid black;
  margin-bottom: 2em;
  padding: 0 0 0.5em;
}

.menu:before {
  content: "[";
}

.menu:after {
  content: "]";
}

.menu > li {
  display: inline;
}

.menu > li:before {
  content: "|";
  padding-right: 0.3em;
}

.menu > li:nth-child(1):before {
  content: "";
  padding: 0;
}

/* Report formatting */
table, th, td {
	border: 1px solid;
	/* border-spacing: 0; */
}

table {
	/* margin: auto; */
	width: 480px;
	table-layout: fixed; 
}

td {
	text-align: center;
}

/* Cells need to start off visible */
.forecast-table-animation {
	width: 80px;
    max-width: 80px;
}

#controls {
	position: fixed;
	float: left;
	left: 5%;
	top: 10%;
	z-index: 100; /* Allow mouseleave to work properly */	
}

#controls-button {
	width: 1.5em;
	height: 1.5em;
}

#controls-menu {
	transition: opacity 0.25s ease-in-out;
	-webkit-transition: opacity 0.25s ease-in-out;
	background-color: rgba(255,255,255,.67);
}

#forecast-table {
	position: relative; /* Allow child elements to be positioned/sized relative to table */
	margin: auto;
	width: 61.803398875%; /* 1 / golden-ratio */
	height: 800px;
}

/* Limit width of forecast table for large screen sizes */
@media (min-width: 1553.3126292px) { /* 960px * golden-ratio */
	#forecast-table {
		width: 960px;
	}
}

/* Make better use of available width on smaller screens */
@media (max-width: 600px) {
	#forecast-table {
		width: 80%;
	}
}

/* Minimum forecast table width */
@media (max-width: 450px) {
	#forecast-table {
		width: 335px; 
	}
}

.forecast-day,
.forecast-time,
.forecast {
	text-align: center;
}

.forecast-time,
.forecast {
	width: 100%;
}

#forecast-table .ahead-cell,
#forecast-table .day-cell,
#forecast-table .time-cell,
#forecast-table .forecast-cell {
	position: absolute;
	text-align: center;
}

.vertical-center {
	position: relative;
	top: 50%;
	transform: translateY(-50%);
	-webkit-transform: translateY(-50%);
}

/*
Animations:

All transitions last the same time. Leave is immediate, move is delayed until
leave completes, and enter is delayed until move completes.
*/
#forecast-table .animate {
	transition: transform 0.25s 0.25s ease-in-out; /* ng-move */
	-webkit-transition: -webkit-transform 0.25s 0.25s ease-in-out; /* ng-move */
}

#forecast-table .animate.ng-enter {
	transition: opacity 0.25s 0.5s ease-in-out;
	-webkit-transition: opacity 0.25s 0.5s ease-in-out;
	opacity: 0;
}

#forecast-table .animate.ng-enter-active {
	opacity: 1;
}

#forecast-table .animate.ng-leave {
	transition: opacity 0.25s 0s ease-in-out;
	-webkit-transition: opacity 0.25s 0s ease-in-out;
	opacity: 1;
}

#forecast-table .animate.ng-leave.ng-leave-active {
	opacity: 0;
}


/* Weather icons */
[class^="wi-"]:before,
[class*=" wi-"]:before {
	font-size: 2.5em;
	display: block; /* Ensure weather icons appear on own line */
}